/*! tailwindcss v4.1.13 | MIT License | https://tailwindcss.com */
@layer properties;
@layer components-socialify;
@layer components-socialify {
  :root, :host {
    --color-gray-300: oklch(87.2% 0.01 258.338);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
  }
}
@layer components-socialify {
  .socialify-btn {
    :where(&) {
      width: unset;
    }
    display: inline-flex;
    flex-shrink: 0;
    cursor: pointer;
    flex-wrap: nowrap;
    align-items: center;
    justify-content: center;
    gap: calc(0.25rem * 1.5);
    text-align: center;
    vertical-align: middle;
    outline-offset: 2px;
    webkit-user-select: none;
    user-select: none;
    padding-inline: var(--socialify-btn-p);
    color: var(--socialify-btn-fg);
    --tw-prose-links: var(--socialify-btn-fg);
    height: var(--socialify-size);
    font-size: var(--socialify-fontsize, 0.875rem);
    font-weight: 600;
    outline-color: var(--socialify-btn-color, var(--color-base-content));
    transition-property: color, background-color, border-color, box-shadow;
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    transition-duration: 0.2s;
    border-start-start-radius: var(--socialify-join-ss, var(--radius-field));
    border-start-end-radius: var(--socialify-join-se, var(--radius-field));
    border-end-start-radius: var(--socialify-join-es, var(--radius-field));
    border-end-end-radius: var(--socialify-join-ee, var(--radius-field));
    background-color: var(--socialify-btn-bg);
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--socialify-btn-noise);
    border-width: var(--border);
    border-style: solid;
    border-color: var(--socialify-btn-border);
    text-shadow: 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 0.15));
    touch-action: manipulation;
    box-shadow: 0 0.5px 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 6%)) inset, var(--socialify-btn-shadow);
    --socialify-size: calc(var(--size-field, 0.25rem) * 10);
    --socialify-btn-bg: var(--socialify-btn-color, var(--color-base-200));
    --socialify-btn-fg: var(--color-base-content);
    --socialify-btn-p: 1rem;
    --socialify-btn-border: var(--socialify-btn-bg);
    @supports (color: color-mix(in lab, red, red)) {
      --socialify-btn-border: color-mix(in oklab, var(--socialify-btn-bg), #000 calc(var(--depth) * 5%));
    }
    --socialify-btn-shadow: 0 3px 2px -2px var(--socialify-btn-bg),
    0 4px 3px -2px var(--socialify-btn-bg);
    @supports (color: color-mix(in lab, red, red)) {
      --socialify-btn-shadow: 0 3px 2px -2px color-mix(in oklab, var(--socialify-btn-bg) calc(var(--depth) * 30%), #0000),
    0 4px 3px -2px color-mix(in oklab, var(--socialify-btn-bg) calc(var(--depth) * 30%), #0000);
    }
    --socialify-btn-noise: var(--socialify-fx-noise);
    .socialify-prose & {
      text-decoration-line: none;
    }
    @media (hover: hover) {
      &:hover {
        --socialify-btn-bg: var(--socialify-btn-color, var(--color-base-200));
        @supports (color: color-mix(in lab, red, red)) {
          --socialify-btn-bg: color-mix(in oklab, var(--socialify-btn-color, var(--color-base-200)), #000 7%);
        }
      }
    }
    &:focus-visible, &:has(:focus-visible) {
      outline-width: 2px;
      outline-style: solid;
      isolation: isolate;
    }
    &:active:not(.socialify-btn-active) {
      translate: 0 0.5px;
      --socialify-btn-bg: var(--socialify-btn-color, var(--color-base-200));
      @supports (color: color-mix(in lab, red, red)) {
        --socialify-btn-bg: color-mix(in oklab, var(--socialify-btn-color, var(--color-base-200)), #000 5%);
      }
      --socialify-btn-border: var(--socialify-btn-color, var(--color-base-200));
      @supports (color: color-mix(in lab, red, red)) {
        --socialify-btn-border: color-mix(in oklab, var(--socialify-btn-color, var(--color-base-200)), #000 7%);
      }
      --socialify-btn-shadow: 0 0 0 0 oklch(0% 0 0/0), 0 0 0 0 oklch(0% 0 0/0);
    }
    &:is(:disabled, [disabled], .socialify-btn-disabled) {
      &:not(.socialify-btn-link, .socialify-btn-ghost) {
        background-color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
        }
        box-shadow: none;
      }
      pointer-events: none;
      --socialify-btn-border: #0000;
      --socialify-btn-noise: none;
      --socialify-btn-fg: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        --socialify-btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
      }
      @media (hover: hover) {
        &:hover {
          pointer-events: none;
          background-color: var(--color-neutral);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-neutral) 20%, transparent);
          }
          --socialify-btn-border: #0000;
          --socialify-btn-fg: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            --socialify-btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
          }
        }
      }
    }
    &:is(input[type="checkbox"], input[type="radio"]) {
      appearance: none;
      &::after {
        content: attr(aria-label);
      }
    }
    &:where(input:checked:not(.socialify-filter .socialify-btn)) {
      --socialify-btn-color: var(--color-primary);
      --socialify-btn-fg: var(--color-primary-content);
      isolation: isolate;
    }
    border-style: var(--tw-border-style) !important;
    border-width: 2px !important;
    border-color: var(--color-gray-300) !important;
    background-color: var(--color-white);
    padding-inline: calc(var(--spacing) * 3) !important;
    color: var(--color-black);
  }
}
@layer base {
  .socialify-auth-providers:has(input.socialify-theme-controller[value=light]:checked),[data-theme=light] {
    color-scheme: light;
    --color-base-100: oklch(100% 0 0);
    --color-base-200: oklch(98% 0 0);
    --color-base-300: oklch(95% 0 0);
    --color-base-content: oklch(21% 0.006 285.885);
    --color-primary: oklch(45% 0.24 277.023);
    --color-primary-content: oklch(93% 0.034 272.788);
    --color-secondary: oklch(65% 0.241 354.308);
    --color-secondary-content: oklch(94% 0.028 342.258);
    --color-accent: oklch(77% 0.152 181.912);
    --color-accent-content: oklch(38% 0.063 188.416);
    --color-neutral: oklch(14% 0.005 285.823);
    --color-neutral-content: oklch(92% 0.004 286.32);
    --color-info: oklch(74% 0.16 232.661);
    --color-info-content: oklch(29% 0.066 243.157);
    --color-success: oklch(76% 0.177 163.223);
    --color-success-content: oklch(37% 0.077 168.94);
    --color-warning: oklch(82% 0.189 84.429);
    --color-warning-content: oklch(41% 0.112 45.904);
    --color-error: oklch(71% 0.194 13.428);
    --color-error-content: oklch(27% 0.105 12.094);
    --radius-selector: 0.5rem;
    --radius-field: 0.25rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  :where( :root:has( .socialify-modal-open, .socialify-modal[open], .socialify-modal:target, .socialify-modal-toggle:checked, .socialify-drawer:not(.socialify-drawer-open) > .socialify-drawer-toggle:checked ) ) {
    scrollbar-gutter: stable;
    background-image: linear-gradient(var(--color-base-100), var(--color-base-100));
    --socialify-root-bg: var(--color-base-100);
    @supports (color: color-mix(in lab, red, red)) {
      --socialify-root-bg: color-mix(in srgb, var(--color-base-100), oklch(0% 0 0) 40%);
    }
  }
  :where(.socialify-modal[open], .socialify-modal-open, .socialify-modal-toggle:checked + .socialify-modal):not(.socialify-modal-start, .socialify-modal-end) {
    scrollbar-gutter: stable;
  }
}
@layer base {
  @property --radialprogress {
    syntax: "<percentage>";
    inherits: true;
    initial-value: 0%;
  }
}
@layer base {
  :root {
    --socialify-fx-noise: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 200 200'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.34' numOctaves='4' stitchTiles='stitch'%3E%3C/feTurbulence%3E%3C/filter%3E%3Crect width='200' height='200' filter='url(%23a)' opacity='0.2'%3E%3C/rect%3E%3C/svg%3E");
  }
}
@layer base {
  :root, [data-theme] {
    background-color: var(--socialify-root-bg, var(--color-base-100));
    color: var(--color-base-content);
  }
}
@layer base {
  :root {
    scrollbar-color: currentColor #0000;
    @supports (color: color-mix(in lab, red, red)) {
      scrollbar-color: color-mix(in oklch, currentColor 35%, #0000) #0000;
    }
  }
}
@layer base {
  :root:has( .socialify-modal-open, .socialify-modal[open], .socialify-modal:target, .socialify-modal-toggle:checked, .socialify-drawer:not([class*="drawer-open"]) > .socialify-drawer-toggle:checked ) {
    overflow: hidden;
  }
}
@keyframes dropdown {
  0% {
    opacity: 0;
  }
}
@keyframes radio {
  0% {
    padding: 5px;
  }
  50% {
    padding: 3px;
  }
}
@keyframes toast {
  0% {
    scale: 0.9;
    opacity: 0;
  }
  100% {
    scale: 1;
    opacity: 1;
  }
}
@keyframes rating {
  0%, 40% {
    scale: 1.1;
    filter: brightness(1.05) contrast(1.05);
  }
}
@keyframes skeleton {
  0% {
    background-position: 150%;
  }
  100% {
    background-position: -50%;
  }
}
@keyframes progress {
  50% {
    background-position-x: -115%;
  }
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-border-style: solid;
    }
  }
}
